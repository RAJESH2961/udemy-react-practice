{"ast":null,"code":"var _jsxFileName = \"/Volumes/LearningLightHouse/Code Practices/REACT-UDEMY/Redux-Advance/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notification from './components/UI/Notification';\nimport { sendCartData } from './store/cart-actions';\n\n// The problem is when some data is in backend firebase\n// If app component mounted for the first time the data in database is lost\n// SO to prevent this we need to maintain a variable\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartisVisible);\n  const dispatch = useDispatch();\n  //getting cart data\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(fe);\n  }, []);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    fetchCartData();\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n        status: notification.status,\n        title: notification.title,\n        message: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this), showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"O9b8bYJxvqj64xnNehdPz6jilpg=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Cart","Layout","Products","useSelector","useDispatch","Notification","sendCartData","jsxDEV","_jsxDEV","Fragment","_Fragment","isInitial","App","_s","showCart","state","ui","cartisVisible","dispatch","cart","notification","fe","fetchCartData","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/LearningLightHouse/Code Practices/REACT-UDEMY/Redux-Advance/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notification from './components/UI/Notification';\nimport { sendCartData } from './store/cart-actions';\n\n// The problem is when some data is in backend firebase\n// If app component mounted for the first time the data in database is lost\n// SO to prevent this we need to maintain a variable\nlet isInitial = true;\n\nfunction App() {\n  const showCart =  useSelector(state => state.ui.cartisVisible);\n  const dispatch = useDispatch();\n  //getting cart data\n  const cart = useSelector((state) => state.cart);\n\n  const notification = useSelector(state => state.ui.notification)\n\n  useEffect(() => {\n    dispatch(fe)\n  }, [])\n\n  useEffect(() => {\n    if(isInitial) {\n      isInitial = false;\n      return;\n    }\n    fetchCartData()\n\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return (\n    <>\n    <Layout>\n      {notification && <Notification status={notification.status} title={notification.title} message={notification.message} />}\n      {showCart && <Cart /> }\n      <Products />\n    </Layout>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,YAAY,QAAQ,sBAAsB;;AAEnD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAIX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC9D,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMe,IAAI,GAAGhB,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACI,IAAI,CAAC;EAE/C,MAAMC,YAAY,GAAGjB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACI,YAAY,CAAC;EAEhErB,SAAS,CAAC,MAAM;IACdmB,QAAQ,CAACG,EAAE,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACd,IAAGY,SAAS,EAAE;MACZA,SAAS,GAAG,KAAK;MACjB;IACF;IACAW,aAAa,CAAC,CAAC;IAEfJ,QAAQ,CAACZ,YAAY,CAACa,IAAI,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACA,IAAI,EAAED,QAAQ,CAAC,CAAC;EACpB,oBACEV,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACAf,OAAA,CAACP,MAAM;MAAAsB,QAAA,GACJH,YAAY,iBAAIZ,OAAA,CAACH,YAAY;QAACmB,MAAM,EAAEJ,YAAY,CAACI,MAAO;QAACC,KAAK,EAAEL,YAAY,CAACK,KAAM;QAACC,OAAO,EAAEN,YAAY,CAACM;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACvHhB,QAAQ,iBAAIN,OAAA,CAACR,IAAI;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBtB,OAAA,CAACN,QAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACP,CAAC;AAEP;AAACjB,EAAA,CA9BQD,GAAG;EAAA,QACQT,WAAW,EACZC,WAAW,EAEfD,WAAW,EAEHA,WAAW;AAAA;AAAA4B,EAAA,GANzBnB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}