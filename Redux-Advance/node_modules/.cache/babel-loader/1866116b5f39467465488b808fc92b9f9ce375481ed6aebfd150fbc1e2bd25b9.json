{"ast":null,"code":"var _jsxFileName = \"/Volumes/LearningLightHouse/Code Practices/REACT-UDEMY/Redux-Advance/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\n\n// The problem is when some data is in backend firebase\n// If app component mounted for the first time the data in database is lost\n// SO to prevent this we need to maintain a variable\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartisVisible);\n  const dispatch = useDispatch();\n  //getting cart data\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n        status: notification.status,\n        title: notification.title,\n        message: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this), showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"O9b8bYJxvqj64xnNehdPz6jilpg=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Cart","Layout","Products","useSelector","useDispatch","Notification","fetchCartData","sendCartData","jsxDEV","_jsxDEV","Fragment","_Fragment","isInitial","App","_s","showCart","state","ui","cartisVisible","dispatch","cart","notification","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/LearningLightHouse/Code Practices/REACT-UDEMY/Redux-Advance/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\n\n// The problem is when some data is in backend firebase\n// If app component mounted for the first time the data in database is lost\n// SO to prevent this we need to maintain a variable\nlet isInitial = true;\n\nfunction App() {\n  const showCart =  useSelector(state => state.ui.cartisVisible);\n  const dispatch = useDispatch();\n  //getting cart data\n  const cart = useSelector((state) => state.cart);\n\n  const notification = useSelector(state => state.ui.notification)\n\n  useEffect(() => {\n    dispatch(fetchCartData())\n  }, [dispatch])\n\n  useEffect(() => {\n    if(isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return (\n    <>\n    <Layout>\n      {notification && <Notification status={notification.status} title={notification.title} message={notification.message} />}\n      {showCart && <Cart /> }\n      <Products />\n    </Layout>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,aAAa,EAAEC,YAAY,QAAQ,sBAAsB;;AAElE;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAIZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC9D,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMgB,IAAI,GAAGjB,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACI,IAAI,CAAC;EAE/C,MAAMC,YAAY,GAAGlB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACI,YAAY,CAAC;EAEhEtB,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAACb,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACa,QAAQ,CAAC,CAAC;EAEdpB,SAAS,CAAC,MAAM;IACd,IAAGa,SAAS,EAAE;MACZA,SAAS,GAAG,KAAK;MACjB;IACF;IAEAO,QAAQ,CAACZ,YAAY,CAACa,IAAI,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACA,IAAI,EAAED,QAAQ,CAAC,CAAC;EACpB,oBACEV,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACAb,OAAA,CAACR,MAAM;MAAAqB,QAAA,GACJD,YAAY,iBAAIZ,OAAA,CAACJ,YAAY;QAACkB,MAAM,EAAEF,YAAY,CAACE,MAAO;QAACC,KAAK,EAAEH,YAAY,CAACG,KAAM;QAACC,OAAO,EAAEJ,YAAY,CAACI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACvHd,QAAQ,iBAAIN,OAAA,CAACT,IAAI;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBpB,OAAA,CAACP,QAAQ;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACP,CAAC;AAEP;AAACf,EAAA,CA7BQD,GAAG;EAAA,QACQV,WAAW,EACZC,WAAW,EAEfD,WAAW,EAEHA,WAAW;AAAA;AAAA2B,EAAA,GANzBjB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}