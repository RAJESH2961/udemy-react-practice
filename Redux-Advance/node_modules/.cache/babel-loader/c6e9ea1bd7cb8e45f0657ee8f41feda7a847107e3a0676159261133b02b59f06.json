{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n  }\n});\n\n// Thunk Creator\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const response = await fetch('...', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      throw new Error('Sending failed!');\n    }\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Success!',\n      message: 'Sent cart data successfully!'\n    }));\n  };\n};\nexport default cartSlice;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","response","fetch","method","body","JSON","stringify","ok","Error","cartActions","actions"],"sources":["/Volumes/LearningLightHouse/Code Practices/REACT-UDEMY/Redux-Advance/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nconst cartSlice = createSlice( {\n    name: 'cart',\n    initialState:{\n        items: [],\n        totalQuantity: 0,\n    },\n    reducers:{\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.items.find( item => item.id === newItem.id);\n            state.totalQuantity++;\n            if(!existingItem){\n                state.items.push({id: newItem.id, price: newItem.price, quantity:1, totalPrice: newItem.price, name: newItem.title});\n            } else {\n                existingItem.quantity++;\n                existingItem.totalPrice += newItem.price;\n            }\n        },\n        removeItemFromCart(state, action) {\n            const id = action.payload;\n            const existingItem = state.items.find( item => item.id === id );\n            state.totalQuantity--;\n            if(existingItem.quantity === 1){\n                state.items = state.items.filter( item => item.id !== id);\n            } else {\n                existingItem.quantity--;\n                existingItem.totalPrice -= existingItem.price;\n            }\n        }\n    }\n} );\n\n\n// Thunk Creator\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!',\n    }));\n\n    const response = await fetch('...', {\n      method: 'PUT',\n      body: JSON.stringify(cart),\n    });\n\n    if (!response.ok) {\n      throw new Error('Sending failed!');\n    }\n\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Success!',\n      message: 'Sent cart data successfully!',\n    }));\n  };\n};\n\n\nexport default cartSlice;\n\nexport const cartActions = cartSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,MAAMC,SAAS,GAAGF,WAAW,CAAE;EAC3BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAC;IACTC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAC;IACLC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACtEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAG,CAACO,YAAY,EAAC;QACbJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UAACD,EAAE,EAAEL,OAAO,CAACK,EAAE;UAAEE,KAAK,EAAEP,OAAO,CAACO,KAAK;UAAEC,QAAQ,EAAC,CAAC;UAAEC,UAAU,EAAET,OAAO,CAACO,KAAK;UAAEf,IAAI,EAAEQ,OAAO,CAACU;QAAK,CAAC,CAAC;MACxH,CAAC,MAAM;QACHR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,IAAIT,OAAO,CAACO,KAAK;MAC5C;IACJ,CAAC;IACDI,kBAAkBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAG,CAAC;MAC/DP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAGO,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAC;QAC3BV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAAER,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7D,CAAC,MAAM;QACHH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,IAAIP,YAAY,CAACK,KAAK;MACjD;IACJ;EACJ;AACJ,CAAE,CAAC;;AAGH;AACA,OAAO,MAAMM,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACzB,SAAS,CAAC0B,gBAAgB,CAAC;MAClCC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,YAAY;MACnBQ,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,KAAK,EAAE;MAClCC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACM,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;IACpC;IAEAX,QAAQ,CAACzB,SAAS,CAAC0B,gBAAgB,CAAC;MAClCC,MAAM,EAAE,SAAS;MACjBP,KAAK,EAAE,UAAU;MACjBQ,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;EACL,CAAC;AACH,CAAC;AAGD,eAAe3B,SAAS;AAExB,OAAO,MAAMoC,WAAW,GAAGpC,SAAS,CAACqC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}