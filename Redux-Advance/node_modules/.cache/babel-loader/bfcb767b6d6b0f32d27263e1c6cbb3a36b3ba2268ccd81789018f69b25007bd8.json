{"ast":null,"code":"import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\n\n// Thunk Creator for sendind cart data\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'sending cart data !'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-testing-c78d6-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'sent cart data successfully !'\n      }));\n      await sendRequest();\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'sending cart data failed..!'\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-testing-c78d6-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity || 0\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","fetchCartData","fetchData","data","json","cartData","replaceCart","items","totalQuantity"],"sources":["/Volumes/LearningLightHouse/Code Practices/REACT-UDEMY/Redux-Advance/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from './ui-slice';\n\nimport {cartActions} from './cart-slice';\n\n// Thunk Creator for sendind cart data\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'sending cart data !',\n      }))\n\n      const sendRequest =  async () => {\n        const response = await fetch('https://react-testing-c78d6-default-rtdb.firebaseio.com/cart.json',{\n        method: 'PUT',\n        body: JSON.stringify(cart),\n        });\n\n        if(!response.ok){\n        throw new Error('Sending cart data failed')\n        }\n      }\n\n      try{\n        dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'sent cart data successfully !',\n      }))\n      await sendRequest();\n      } catch(error){\n        dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'sending cart data failed..!',\n      }));\n        \n      }\n\n\n\n    };\n};\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        'https://react-testing-c78d6-default-rtdb.firebaseio.com/cart.json'\n      );\n      \n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity || 0\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Fetching cart data failed!',\n      }));\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,SAAQC,WAAW,QAAO,cAAc;;AAExC;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;MAClCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMC,WAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,EAAC;QACjGC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MACzB,CAAC,CAAC;MAEF,IAAG,CAACO,QAAQ,CAACM,EAAE,EAAC;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC;IAED,IAAG;MACDb,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;QACpCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;MACH,MAAMC,WAAW,CAAC,CAAC;IACnB,CAAC,CAAC,OAAMS,KAAK,EAAC;MACZd,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;QACpCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IAEH;EAIF,CAAC;AACL,CAAC;AAED,OAAO,MAAMW,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOf,QAAQ,IAAK;IACzB,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEACF,CAAC;MAED,IAAI,CAACD,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMI,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAAC;MAClChB,QAAQ,CAACH,WAAW,CAACuB,WAAW,CAAC;QAC/BC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG,aAAa,IAAI;MAC3C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdd,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;QAClCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}